# -*- coding: utf-8 -*-
"""Customer_Segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12Bo5KU-ZzIoB1b68KoB_l3vbPWH7lYoe
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

data =pd.read_csv('/content/Mall_Customers.csv')

data.head()

data.info()

data.isnull().sum()

corr_matrix =data.select_dtypes(include="int64").corr()

plt.figure(figsize=(8,6))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

data =data[['Spending Score (1-100)','Annual Income (k$)']]
data.head()

from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

X = data[['Spending Score (1-100)','Annual Income (k$)']].values

scaler =StandardScaler()
X_scaled =scaler.fit_transform(X)

# X_scaled

wcss = []
for i in range(1,11):
    kmeans = KMeans(n_clusters=i, init='k-means++', random_state=42)
    kmeans.fit(X_scaled)
    wcss.append(kmeans.inertia_)

plt.figure(figsize=(8,5))
plt.plot(range(1,11), wcss, marker='o')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.title('Elbow Method (Scaled Data)')
plt.show()

n_cluster =5

kmeans =KMeans(n_clusters=n_cluster , init='k-means++', random_state=42)
y_kmeans = kmeans.fit_predict(X_scaled)

data['Cluster'] = y_kmeans

plt.figure(figsize=(8,6))
sns.scatterplot(x=X_scaled[:,0], y=X_scaled[:,1], hue=y_kmeans, palette='Set1', s=100)
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1],
            s=300, c='black', label='Centroids', marker='X')
plt.xlabel('Spending Score (scaled)')
plt.ylabel('Annual Income (scaled)')
plt.title('Customer Segments (Scaled)')
plt.legend()
plt.show()